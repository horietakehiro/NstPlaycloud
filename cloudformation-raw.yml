AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: |
  This is the template for deploying NstPlaycloud app.


Resources:
  Vpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true

  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: 
        Ref: Vpc
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true

  PrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: 
        Ref: Vpc
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false

  Igw:
    Type: 'AWS::EC2::InternetGateway'

  IgwAttachToVpc:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: 
        Ref: Igw 
      VpcId:
        Ref: Vpc

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: 
        Ref: Vpc 

  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      GatewayId: 
        Ref: Igw 
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0

  RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: 
        Ref: PublicRouteTable
      SubnetId: 
        Ref: PublicSubnet

  ImageUtilLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: artifacts/image-util-layer/ImageUtilLayer/
      CompatibleRuntimes:
        - python3.6
    Metadata:
      BuildMethod: python3.6


  ThumbnailCreationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: artifacts/thumbnail-creation/ThumbnailCreationFunction/
      Handler: app.lambda_handler
      Runtime: python3.6
      Timeout: 10
      Layers:
        - Ref: ImageUtilLayer
      # Environment:
      #   Variables:
      #     # S3_ENDPOINT: 

      Role:
        Fn::GetAtt: [LambdaExecRoke, Arn]

      Events:
        ThumbnailCreation:
          Type: S3
          Properties:
            Bucket:
              Ref: SrcBucket
            Events: s3:ObjectCreated:Put
            Filter:
              S3Key:
                Rules:
                - Name: suffix
                  Value: .png
                - Name: prefix
                  Value: media/original/


  ImageDeletionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: artifacts/image-deletion/ImageDeletionFunction/
      Handler: app.lambda_handler
      Runtime: python3.6
      Timeout: 10
      Layers:
        - Ref: ImageUtilLayer
      Role:
        Fn::GetAtt: [LambdaExecRoke, Arn]
      Events:
        ImageDeletion:
          Type: SQS
          Properties:
            Queue: 
              Fn::GetAtt: [SrcQueue, Arn]
            BatchSize: 10

  MaskingCreationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: artifacts/masking-creation/MaskingCreationFunction/
      Handler: app.lambda_handler
      Runtime: python3.6
      Timeout: 10
      Layers:
        - Ref: ImageUtilLayer
      Role:
        Fn::GetAtt: [LambdaExecRoke, Arn]
      Events:
        MaskingCreationApi:
          Type: Api
          Properties:
            Path: /masking
            Method: post


  LambdaExecRoke:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole

      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
        - arn:aws:iam::aws:policy/AmazonSQSFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess


  SrcBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: nstpc

  SrcQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: nstpc-delete

"""
Django settings for frontend project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ac=0(1w++^fkl^&4whxbm9vwb&weacgvjq(ft8#@g2!_=$yw^4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "playground",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'frontend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'frontend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

if os.environ.get("TEST", None):
    DATABASES = {
        'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'nstpc',
            'USER': 'nstpc',
            'PASSWORD': 'nstpc',
            'HOST': 'database',
            'PORT': '5432',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True



LOGIN_REDIRECT_URL="image_list"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

# settings for AWS
AWS_REGION="ap-northeast-1"
# settings for using s3 bucekt as static and media storage
AWS_DEFAULT_ACL=None
DEFAULT_FILE_STORAGE="playground.storages.MediaStorage"
STATICFILES_STORAGE="playground.storages.StaticStorage"
AWS_STORAGE_BUCKET_NAME=os.environ.get("AWS_STORAGE_BUCKET_NAME", "nstpc")
AWS_S3_ENDPOINT_URL=os.environ.get("AWS_S3_ENDPOINT_URL", None)
AWS_S3_SIGNATURE_VERSION="s3v4"
STATIC_URL=AWS_S3_ENDPOINT_URL

# settings for using sqs
AWS_SQS_ENDPOINT_URL=os.environ.get("AWS_SQS_ENDPOINT_URL", None)
AWS_SQS_DELETE_QUEUE_NAME=os.environ.get("AWS_SQS_DELETE_QUEUE_NAME", "nstpc-delete")
AWS_SQS_TRANSFER_QUEUE_NAME=os.environ.get("AWS_SQS_TRANSFER_QUEUE_NAME", "nstpc-transfer")


# settings for using apigateway
# https://{restapi_id}.execute-api.{region}.amazonaws.com/{stage_name}/{path_name}
AWS_APIGW_ENDPOINT_URL=os.environ.get("AWS_APIGW_ENDPOINT_URL", None)
if AWS_APIGW_ENDPOINT_URL is not None and not AWS_APIGW_ENDPOINT_URL.endswith("/"):
    AWS_APIGW_ENDPOINT_URL += "/"
AWS_APIGW_RESTAPI_NAME=os.environ.get("AWS_APIGW_RESTAPI_NAME", "nstpc")
AWS_APIGW_MASKING_PATH="masking"

AWS_APIGW_URL4TEST="{endpoint}restapis/{rest_api_id}/test/_user_request_/{path_name}"
AWS_APIGW_URL4PROD="https://{rest_api_id}.execute-api.{region}.amazonaws.com/default/{path_name}"

